#!/bin/bash

echo "Starting instillation for custom apps"
# This assumes a fresh arch installation of hyperland profile. 
# Refrence libraries 
# sudo pacman -S --noconfirm steam lutris wine-staging winetricks gamemode lib32-gamemode giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls mpg123 lib32-mpg123 openal lib32-openal \
# v4l-utils lib32-v4l-utils libgpg-error lib32-libgpg-error alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo sqlite lib32-sqlite libxcomposite lib32-libxcomposite libxinerama \
#lib32-libxinerama ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt lib32-libxslt libva lib32-libva gtk3 lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader \
# lib32-vulkan-icd-loader obs-studio discord mangohud lib32-mangohud goverlay gamescope solaar bluez bluez-utils lib32-libpulse pipewire pipewire-pulse pipewire-alsa linux-headers xwaylandvideobridge




# List of packages
applications=(
    firefox-developer-edition  # Browser
    emacs-wayland
    #steam
    github-desktop-bin
    discord
    betterdiscord-installer
    qbittorrent
    obs-studio

    # TUI
    ffmpeg
    neofetch
)

default_applications=(
    #nautilus             # File manager
    #eog                  # Image viewer
    #evince               # Document viewer
    #decibels             # Media player
    #baobab               # Disk analyzer
    #gnome-software       # Browse apps
    neovim
    pipewire 
    wireplumber 
    bluez
    bluetui
    # blueberry            # Bluetooth control
    # nm-connection-editor # WiFi control
    # pavucontrol          # Audio control
    kooha                # Video record
    htop                 # Process viewer
    btop
    tree
    
)


packages=(
    hyprland                    # WM
    xdg-desktop-portal-hyprland # xdg desktop portal for hyprland
    xdg-desktop-portal-kde      # File picker
    ly                          # LM
    kitty                       # Terminal
    waybar                      # Status waybar
    tofi                        # App launcher
    #waypaper                    # GUI Wallpaper manager
    #swaync                      # Notifications
    wl-clipboard                # Clipboard manager
    hyprlock                    # Lock manager
    hypridle                    # Idle manager
    hyprpaper                   # Wallpaper backend
    wlogout                     # Logout menu
    nwg-look                    # GTK Themer
    fzf
    stow
    zoxide
    curl
    rsync
    grep
    bash-completion

    qt5ct-kde
    qt5-wayland
    qt6ct-kde
    qt6-wayland

    breeze
    breeze-gtk
    breeze-icons
    kvantum
)

rog_packages=(
    rogauracore-git 
    asus-fan-control
)

fonts=(
    ttf-jetbrains-mono     # System font
    #noto-fonts-emoji       # Emoji font
    #awesome-terminal-fonts # Better align icons
    nerd-fonts
)



install_yay() {
    if ! command -v yay &> /dev/null; then
        echo "Installing yay..."
        sudo pacman -S --needed --noconfirm git base-devel
        git clone https://aur.archlinux.org/yay-bin.git
        cd yay-bin || exit
        makepkg -si --noconfirm
        cd .. && rm -rf yay-bin
        export PATH="$PATH:$HOME/.local/bin"
    else
        echo "yay is already installed."
    fi
}

install_zsh() {
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
}

install_pkgs() {
  local pkg
  for pkg in "$@"; do
    printf "Installing %sâ€¦ " "$pkg"
    if ! pacman -Qq "$pkg" &> /dev/null; then
      yay -S --noconfirm --needed "$pkg"
      echo "done."
    else
      echo "already installed."
    fi
  done
}



# Install yay
install_yay
install_zsh

install_pkgs "${packages[@]}"
install_pkgs "${default_applications[@]}"
install_pkgs "${applications[@]}"
install_pkgs "${rog_packages[@]}"
install_pkgs "${fonts[@]}"
